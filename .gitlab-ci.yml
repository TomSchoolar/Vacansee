stages:
  - build
  - test
  - deploy

build-vue-client:
  stage: build
  tags:
    - node
    - server-runner
  only:
    refs:
      - main
  before_script:
    - cd client
    - cp $PRODUCTION_CLIENT_ENV_FILE .env
  script:
    - npm install --progress=false
    - npm run build
  cache:
    paths:
      - client/node_modules/
  artifacts:
    paths:
      - client/
      - api/

run-python-unit-tests:
  stage: test
  tags:
    - python
    - server-runner
  before_script:
    - cd api
    - cp $TEST_ENV_FILE api/.env
  script:
    - pip install -r requirements.txt
    # have to install psycopg2 linux package separately
    - pip install psycopg2-binary
    # check db connection:
    - python manage.py check --database default
    # empty db
    - python manage.py flush --noinput
    # migrate db
    - python manage.py migrate
    # seed db
    - python manage.py loaddata fixtures.json
    # run tests
    - coverage erase
    - coverage run --source='.' manage.py test
    - coverage html
    - coverage xml
    - coverage report
  coverage: /TOTAL\s+[\d+\s+]{2,4}(\d+%)/
  artifacts:
    paths:
      - api/htmlcov/
    reports:
      cobertura: api/coverage.xml

run-js-unit-tests:
  stage: test
  tags:
    - node
    - server-runner
  before_script:
    - cd client
  script:
    - npm i --include=dev
    - npm test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    paths:
      - client/tests/coverage/
    reports:
      cobertura: client/tests/coverage/cobertura-coverage.xml

deploy-api:
  stage: deploy
  tags:
    - python
    - server-runner
  needs: ['run-python-unit-tests']
  only:
    refs:
      - main
  before_script:
    # add ssh private key to local .ssh
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add
  script:
    - scp -r -o StrictHostKeyChecking=no
        $CI_PROJECT_DIR/api
        root@$SERVER_IP:/code
    # copy code and install packages
    - ssh root@$SERVER_IP "cd ../code/api && pip install -r requirements.txt && pip install psycopg2-binary"
    # copy env vars
    - cd api
    - cp $ENV_FILE api/.env
    - scp -o StrictHostKeyChecking=no
        $CI_PROJECT_DIR/api/api/.env
        root@$SERVER_IP:/code/api/api/.env
    # check db connection, migrate and seed db:
    - ssh root@$SERVER_IP "cd /code/api && 
      python3 manage.py check --database default && 
      python3 manage.py migrate &&
      python3 manage.py loaddata fixtures.json"
    # restart gunicorn and nginx servers
    - ssh root@$SERVER_IP "sudo systemctl restart gunicorn && sudo systemctl restart nginx"

deploy-client:
  stage: deploy
  tags:
    - node
    - server-runner
  needs: ['build-vue-client', 'run-js-unit-tests']
  only:
    refs:
      - main
  before_script:
    # add private ssh key to local .ssh
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add
  script:
    - scp -o StrictHostKeyChecking=no -r client/dist/* root@$SERVER_IP:/code/client
    - ssh root@$SERVER_IP sudo service nginx reload