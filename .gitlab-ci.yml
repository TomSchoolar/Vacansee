stages:
  - build
  - test
  - deploy

build-vue-client:
  stage: build
  tags:
    - node
    - server-runner
  before_script:
    - cd client
  script:
    - npm install --progress=false
    - npm run build
  cache:
    paths:
      - client/node_modules/
  artifacts:
    paths:
      - client/dist/
    expire_in: 1 hour

run-python-unit-tests:
  stage: test
  tags:
    - python
    - server-runner
  before_script:
    - cd api
    - cp $TEST_ENV_FILE api/.env
  script:
    - pip install -r requirements.txt
    # have to install psycopg2 linux package separately
    - pip install psycopg2-binary
    # check db connection:
    - python manage.py check --database default
    # migrate db
    - python manage.py makemigrations
    - python manage.py migrate
    # run tests
    - coverage erase
    - coverage run --source='.' manage.py test
    - coverage report

run-js-unit-tests:
  stage: test
  tags:
    - node
    - server-runner
  before_script:
    - cd client
  script:
    - npm i --include=dev
    - npm test

deploy-api:
  stage: deploy
  tags:
    - python
    - server-runner
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add
    - ssh -o StrictHostKeyChecking=no root@$SERVER_IP ufw allow 8000
  script:
    - scp -r -o StrictHostKeyChecking=no
        $CI_PROJECT_DIR/api
        root@$SERVER_IP:/code
    # copy code and env vars, install packages
    - ssh root@$SERVER_IP "cd ../code/api && pip install -r requirements.txt && pip install psycopg2-binary && touch api/.env && echo $ENV_FILE > api/.env"
    # check db connection and make migrations:
    - ssh root@$SERVER_IP "cd /code/api && python manage.py check --database default && python manage.py makemigrations && python manage.py migrate"
    # restart server
    - ssh root@$SERVER_IP sudo systemctl restart gunicorn

deploy-client:
  stage: deploy
  tags:
    - node
    - server-runner
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add
    - ssh -o StrictHostKeyChecking=no root@$SERVER_IP ufw allow 8080
  script:
    - scp -r client/dist/* root@$SERVER_IP:/code/client
    - ssh root@$SERVER_IP sudo service nginx reload