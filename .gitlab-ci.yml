stages:
  - build
  - test
  - deploy

build-vue-client:
  stage: build
  tags:
    - node
    - server-runner
  before_script:
    - cd client
  script:
    - npm install --progress=false
    - npm run build

run-python-unit-tests:
  stage: test
  tags:
    - python
    - server-runner
  before_script:
    - cd api
    - cp $ENV_FILE api/.env
  script:
    - pip install -r requirements.txt
    # check db connection:
    - python manage.py check --database default
    # migrate db
    - python manage.py makemigrations
    - python manage.py migrate
    # run tests
    - coverage erase
    - coverage run --source='.' manage.py test
    - coverage report

run-js-unit-tests:
  stage: test
  tags:
    - node
    - server-runner
  before_script:
    - cd client
  script:
    - npm i --include=dev
    - npm test

deploy-api:
  stage: deploy
  tags:
    - python
    - server-runner
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add
    - ssh -o StrictHostKeyChecking=no root@$SERVER_IP ufw allow 8000
  script:
    - scp -o StrictHostKeyChecking=no
        $CI_PROJECT_DIR/api
        root@$SERVER_IP/api
    - ssh root@$SERVER_IP
    - cd ../api
    - pip install requirements.txt
    - gunicorn --bind 0.0.0.0:8000 api.wsgi
    - exit

deploy-client:
  stage: deploy
  tags:
    - node
    - server-runner
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
